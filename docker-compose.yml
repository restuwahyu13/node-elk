version: '3'
services:
  #####################################
  # APPLICATION SERVICE ENVIRONMENT
  #####################################
  app:
    build: .
    restart: always
    healthcheck:
      start_period: 60s
      timeout: 120s
      interval: 30s
      test: echo ${USER}
    ports:
      - 3000:3000
    env_file: .env
    depends_on:
      - mysql
    volumes:
      - ./:/usr/share/app
      - /usr/share/app/node_modules
    networks:
      - node_networks
  ##############################
  # DATABASE SERVICE ENVIRONMENT
  ##############################
  mysql:
    image: mysql:8.0.30-debian
    restart: always
    healthcheck:
      start_period: 60s
      timeout: 120s
      interval: 30s
      test: echo ${USER}
    env_file: .env
    environment:
      MYSQL_HOST: ${MYSQL_HOST}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DBNAME}
    ports:
      - 3306:3306
    volumes:
      - mysql:/var/lib/mysql
    networks:
      - node_networks
  ##############################
  # REDIS SERVICE ENVIRONMENT
  ##############################
  redis:
    image: redis:6.2.6-alpine
    restart: always
    healthcheck:
      start_period: 60s
      timeout: 120s
      interval: 30s
      test: echo ${USER}
    ports:
      - 6379:6379
    networks:
      - node_networks
  #####################################
  # ELASTICSEARCH SERVICE ENVIRONMENT
  ####################################
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.4.0
    restart: always
    healthcheck:
      start_period: 60s
      timeout: 120s
      interval: 30s
      test: echo ${USER}
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
    ports:
      - 9200:9200
      - 9300:9300
    volumes:
      - es:/usr/share/elasticsearch/data
    networks:
      - node_networks
  ###############################
  # LOGSTASH SERVICE ENVIRONMENT
  ##############################
  logstash:
    image: docker.elastic.co/logstash/logstash:8.4.0
    restart: always
    healthcheck:
      start_period: 60s
      timeout: 120s
      interval: 30s
      test: echo ${USER}
    ports:
      - 9600:9600
    volumes:
      - ./logstash/pipeline:/usr/share/logstash/pipeline
    depends_on:
      - elasticsearch
      - redis
    networks:
      - node_networks
  ###############################
  # KIBANA SERVICE ENVIRONMENT
  ##############################
  kibana:
    image: docker.elastic.co/kibana/kibana:8.4.0
    restart: always
    healthcheck:
      start_period: 60s
      timeout: 120s
      interval: 30s
      test: echo ${USER}
    environment:
      - SERVER_NAME=kibana
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch
    networks:
      - node_networks
# #############################
# # VOLUME PERSISTENT DATA
# #############################
volumes:
  mysql:
  es:
    #############################
    # NETWORKS SHARING GROUP
    #############################
networks:
  node_networks:
